# Tracking server
mlflow ui --port 8080 --backend-store-uri sqlite:///mlruns.db
mlflow server --backend-store-uri sqlite:///my.db
mlflow server \
    --host 0.0.0.0 \
    --port 8885 \
    --artifacts-destination s3://my-bucket

Tracking server: no
Backend store: local filesystem
Artifacts store: local filesystem
import mlflow

tracking server: yes, local server
backend store: sqlite database
artifacts store: local filesystem
mlflow server --backend-store-uri sqlite:///backend.db --default-artifact-root ./artifacts_local
mlflow.set_tracking_uri("http://127.0.0.1:5000")

# mlflow on aws
tracking server: yes
backend store: postgresql database
artifacts store: s3 bucket on aws
mlflow server -h 0.0.0.0 -p 5000 --backend-store-uri postgresql://DB_USER:DB_PASSWORD@DB_ENDPOINT:5432/DB_NAME --default-artifact-root s3://S3_BUCKET_NAME

# register model
mlflow.log_artifact("mymodel", artifact_path="models/")
mlflow.register_model(<model_uri>, <model_name>)
mlflow.<framework>.log_model(model, artifact_path="models/")

# Loading model
logged_model = 'runs:/1a1c78f87a274675b3fe95c8054cb5b5/models_mlflow'
loaded_model = mlflow.pyfunc.load_model(logged_model)
xgboost_model = mlflow.<framework>.load_model(logged_model)